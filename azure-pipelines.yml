# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- none

pool:
  name: 'pool-dev-001'
  demands:
  - agent.name -equals az-agent-dev-linux-001
  - java
  - maven  

steps:
- task: SonarQubePrepare@4
  inputs:
   SonarQube: 'SonarQube'
   scannerMode: 'CLI'
   configMode: 'file'
   configFile: 'sonar-project-properties'
   extraProperties: |
     # Additional properties that will be passed to the scanner, 
     # Put one key=value per line, example:
     # sonar.exclusions=**/*.bin
     sonar.projectKey=MyShuttle

- task: SonarQubeAnalyze@4

- task: SonarQubePublish@4
  inputs:
   pollingTimeoutSec: '300'

- task: Maven@3
  displayName: Maven
  inputs:
    mavenPomFile: 'pom.xml'
    publishJUnitResults: true
    testResultsFiles: '**/TEST-*.xml'
    testRunTitle: 'MyShuttle'
    codeCoverageToolOption: 'JaCoCo'
    codeCoverageClassFilesDirectories: 'src/main'
    javaHomeOption: 'JDKVersion'
    mavenVersionOption: 'Default'
    mavenAuthenticateFeed: true
    effectivePomSkip: false
    sonarQubeRunAnalysis: false

- task: CopyFiles@2
  displayName: 'Copy Files'
  inputs:
    SourceFolder: '$(build.sourcesdirectory)/target'
    Contents: '**/*.war'
    TargetFolder: '$(build.artifactstagingdirectory)'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact'
  inputs:
    PathtoPublish: '$(build.artifactstagingdirectory)'